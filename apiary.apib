FORMAT: 1A
HOST: http://api2.sandbox.freshrealm.co

# FreshRealm REST API 2.0 Documentation

This document describes the calls needed to interact with FreshRealm’s Merchant API.

# Output Format and Structure
JSON will be returned in all responses from this API, with the following structure.

    {
        "code": 200,
        "timestamp": 1367975121,
        "data": {
            “id”: 5,
            ...,
            ...,
            ...
        }
    }


`Code` is one of the following standard HTTP status codes:

1.  `200` OK
2.  `400` Bad Request
3.  `401` Access Denied
4.  `403` Token key is not valid
5.  `404` Resource Not Found
6.  `500` Internal Server Error
7.  `501` Not Implemented

`Timestamp` is a UNIX timestamp that indicates when the server started processing the request.

`Data` contains attributes of a single resource or array of resources.

# Service Endpoints
An endpoint is the URL of the server that handles your request.  The API endpoint for all requests in this document is http://api2.sandbox.freshrealm.co/

# Example
In the case where you want to retrieve recent order information, you would use the GET HTTP method to the following URL:

`http://api2.sandbox.freshrealm.co/orders?key=myaccesstoken`

A `key` is a required attribute for each call. See the authentication diagram at the bottom of this document for more information.

# Requesting Specific Fields
For performance reasons, FreshRealm recommends retrieving the minimum number of fields. In addition, not all fields are retrieved by default, so additional fields may be requested (details of the attributes of the resources are described in the Resource Description section).  To retrieve fewer (or more) fields, use the `fields` attribute in the GET request.

`http://api2.sandbox.freshrealm.co/orders?fields=["totalPrice"]`

To obtain multiple fields, separate the fields by commas:

`http://api2.sandbox.freshrealm.co/products/1918?fields=["id","costs","prices”]`

Some calls retrieve nested arrays.  When this is the case you must use the key of the array to retrieve a subset of the fields.  For example to retrieve customer information for order 678 (e.g. email, phone...) you could use this call:

`http://api2.sandbox.freshrealm.co/orders/678?fields=["customer"]`

# Limit and Offset
Retrieving a large list of resources in one request will degrade performance. Use `limit` and `offset` GET attributes to divide your request into multiple queries. The default value for `limit` is 100, which is being used when limit is not provided. Maximal number of records returned is 500. The default ordering is most recent records first. For example, if we want to get the next 50 orders starting from, and including, position 150 (150th most recent order), use the following call:

`http://api2.sandbox.freshrealm.co/orders?offset=150&limit=50`

# Filter
Some fields can be used for filtering a list of resources. Filter is a JSON encoded GET attribute that can be defined by a key value pair or as a JSON object with an operator.

### Allowed Operators
`in`, `not in`, `like`, `=`, `<`, `>`, `<=`, `>=`, `!=`

#### Simple Filter Example: Find customer by email
`http://api2.sandbox.freshrealm.co/customers?filter={"email":"mycustomer@freshrealm.co"}`

#### Advanced Filter Example: List all orders with a total price greater than $120
`http://api2.sandbox.freshrealm.co/orders?filter=[{"field":"totalCost","operator":">","value":"120"}]`

### Timestamp Filter
This filter allows retrieval of records created or modified after this time. Every request returns a timestamp, which can be used for this filter. It can be used for database synchronization of products between FreshRealm and your application. The following call would return all orders modified or created after `1367975121`.

`http://api2.sandbox.freshrealm.co/orders?timestamp=1367975121`

The following workflow will significantly improve performance of api data transer. Timestamp should be used when downloading multiple resources - for example: `/products` or `/orders`

 - load latest timestamp for resource from cache/db/filesystem
 - call api, apply timestamp and limit
  - if `X-Pagination-Current-Page` header is less then `X-Pagination-Page-Count` call again with incremented offset
 - save timestamp from latest call to cache/db/filesystem

# Contributing
This API documentation lives on Github. If you see an error or a typo, please submit a pull request at [https://github.com/freshrealm/freshrealm-api](https://github.com/freshrealm/freshrealm-api). We're always happy to have contributions.

# Group Authentication
FreshRealm’s REST API currently uses a proprietary authentication system. Each client gets its own API access token, which must be a part of every request sent to the FreshRealm API.  You must obtain this token by using our authentication call and supplying your secret, which we will provide to you.
The token has lifespan of one month, but it can expire earlier. The token can be passed in url as GET or in request body with PUT or POST parameters.

### Recommended api authentication flow

 - load local token
  - no token: call authenticate
  - save token locally (cache, db, filestystem)
 - call api resource using token
 - call returns 200: process results
 - call returns 401: get new token
  - call authenticate
  - save token locally
  - repeat the previous call with new token

##Get Authentication Token [/authenticate]
### POST
+ Request (application/json)
Your FreshRealm secret must be obtained by contacting FreshRealm.

    + Body

            {
                "secret": "myFreshRealmSecret"
            }

+ Response 200 (application/json)

        {
            "code": 200,
            "timestamp": 1465982944,
            "data": {
                "token": "myNewToken",
                "expiration": 1468661344
            }
        }


# Group Products

A **product** is an active item available for you to purchase. Product is using "SKU" number as primary identifier for order API and product updates. 

The following table describes which attributes are provided by default, and which can be used as a filter.


| Field                 | Can Edit   | Description |
|-----------------------|-----------|-------------|
| `id`                    |          | FreshRealm item id |
| `itemName`              |        | Name of the product |
| `customName`            |    X    | Customize name of the product |
| `sku`                   |        | Retailer defined item SKU used as primary identifier for product. It is a string with maximum length of 45 characters. SKU must be a unique string.|
| `gtin`                  |        | Global gtin identification number |
| `published`             |    X   | A published flag (boolean) |
| `description`           |    X   | Product description |
| `size`                  |        | An array containing `height`, `width`, `length`, `containerId`, `containerName`, `estimatedVesselLoad` and `slots`. A Vessel has capacity of 40 slots. |
| `weight`                |        | Weight |
| `weightUnit`            |        | Unit of weight used e.g. lb, oz, etc. |
| `itemType`            |        | Either `product` or `meal_plan` |
| `freshRealmCost`        |        | FreshRealm Cost |
| `categories`            |    X      | List of categories - categories will be deprecated soon. Use tags instead. |
| `tagGroups`            |     X      | Each product can be assigned to multiple groups with different tags inside. Groups can be used for navigation or categories. Groups have following structure: groupId => [tag1Id, tag2Id] |
| `updateTime`            |           | Time of last update |
| `imageURL`              |           | Default image url in the full resolution |
| `nutritionInfo`         |        | Nutritional information for a product. Included by default if individual product is requested but not when list of products is requested |
| `isAvailable`           |           | Whether or not it is currently available for purchase |
| `ingredients`           |           | Ingredients of the product |
| `allergens`             |           | Product allergens |
| `itemType`              |           |  Type of item. For e.g : raw material , packing supply, etc|
| `shippingLocations`     |           | Available shipping locations for the specified product|
| `subProducts`     |           | List of SKU number of sub products. This field is used by meal type of product.|
| `customData`     |           | Save additional product information as key value pairs. Custom data might come pre-populated by food maker. It is recommended to save product information from e-commerce platform to this field.|

## List Products [/products?key={token}]
Return all of the products. See the `Products` resource table for more information.

### GET

+ Parameters
    + token (required, string)

+ Response 200 (application/json)

   {  
   "code":200,
   "timestamp":1427386200,
   "data":[  
      {  
         "id":"1391",
         "itemName":"Turkey, Egg White & Sundried Tomato Breakfast",
         "customName":null,
         "sku":"1391",
         "gtin":"10826766900005",
         "published":"0",
         "description":null,
         "size":{  
            "height":"2.26",
            "width":"3.71",
            "length":"7.61",
            "containerId":"1",
            "containerName":"Medium Container",
            "estimatedVesselLoad":"5",
            "slots":"2"
         },
         "weight":"7.5",
         "weightUnit":"oz",
         "freshRealmCost":null,
         "updateTime":1425340991,
         "categories":[  

         ],
         "tagGroups":[  

         ],
         "imageUrl":null,
         "nutritionInfo":{  
            "Calories":{  
               "amount":"285.36",
               "unit":"KCal",
               "weightGrams":null,
               "percentDaily":14
            },
            "Fat Calories":{  
               "amount":"35.86",
               "unit":"KCal",
               "weightGrams":null,
               "percentDaily":7
            },
            "Fat":{  
               "amount":"3.98",
               "unit":"g",
               "weightGrams":"3.98",
               "percentDaily":6
            },
            "Saturated Fat":{  
               "amount":"1.49",
               "unit":"g",
               "weightGrams":"1.49",
               "percentDaily":7
            },
            "Polyunsaturated Fat":{  
               "amount":null,
               "unit":"g",
               "weightGrams":null,
               "percentDaily":0
            },
            "Monounsaturated Fat":{  
               "amount":null,
               "unit":"g",
               "weightGrams":null,
               "percentDaily":0
            },
            "Trans Fat":{  
               "amount":"0",
               "unit":"g",
               "weightGrams":"0",
               "percentDaily":0
            },
            "Cholesterol":{  
               "amount":"14.72",
               "unit":"mg",
               "weightGrams":0.01472,
               "percentDaily":5
            },
            "Carbohydrates":{  
               "amount":"48.07",
               "unit":"g",
               "weightGrams":"48.07",
               "percentDaily":16
            },
            "Fiber":{  
               "amount":"4.12",
               "unit":"g",
               "weightGrams":"4.12",
               "percentDaily":16
            },
            "Sugar":{  
               "amount":"14",
               "unit":"g",
               "weightGrams":"14",
               "percentDaily":16
            },
            "Protein":{  
               "amount":"15.84",
               "unit":"g",
               "weightGrams":"15.84",
               "percentDaily":32
            },
            "Vitamin A":{  
               "amount":null,
               "unit":"mcg",
               "weightGrams":null,
               "percentDaily":0
            },
            "Thiamine B1":{  
               "amount":null,
               "unit":"mcg",
               "weightGrams":null,
               "percentDaily":0
            },
            "Vitamin B6":{  
               "amount":null,
               "unit":"mcg",
               "weightGrams":null,
               "percentDaily":0
            },
            "Folate B9":{  
               "amount":null,
               "unit":"mcg",
               "weightGrams":null,
               "percentDaily":0
            },
            "Vitamin C":{  
               "amount":null,
               "unit":"mg",
               "weightGrams":0,
               "percentDaily":0
            },
            "Vitamin E":{  
               "amount":null,
               "unit":"mg",
               "weightGrams":0,
               "percentDaily":0
            },
            "Calcium":{  
               "amount":null,
               "unit":"mg",
               "weightGrams":0,
               "percentDaily":0
            },
            "Copper":{  
               "amount":null,
               "unit":"mcg",
               "weightGrams":null,
               "percentDaily":0
            },
            "Iron":{  
               "amount":null,
               "unit":"mg",
               "weightGrams":0,
               "percentDaily":0
            },
            "Phosphorous":{  
               "amount":null,
               "unit":"mg",
               "weightGrams":0,
               "percentDaily":0
            },
            "Potassium":{  
               "amount":null,
               "unit":"mg",
               "weightGrams":0,
               "percentDaily":0
            },
            "Sodium":{  
               "amount":"549.37",
               "unit":"mg",
               "weightGrams":0.54937,
               "percentDaily":23
            }
         },
         "isAvailable":1,
         "shippingLocations":[  

         ],
         "ingredients":[  
            "Grape 1.39\/lb",
            "Organic Wheat Sandwich Thin 6\/6 ea #3438",
            "Egg White Patty 3.5\" 160\/1.75 oz #3675766",
            "Turkey Breast 2\/9-lb 6109724",
            "Cheese Cream  10\/3 lb #5406467",
            "Spinach 2.68\/lb",
            "Sundried Tomato 5.49\/lb"
         ],
         "subProducts":[  

         ],
         "alergens":[  

         ],
         "itemType":"product",
         "isUsda":false,
         "shelfLife":null,
         "customData":[  

         ]
      },
      {  
         "id":"1400",
         "itemName":"Ham & Egg Breakfast Sandwich",
         "customName":null,
         "sku":"1400",
         "gtin":"10826766900012",
         "published":"0",
         "description":null,
         "size":{  
            "height":"2.26",
            "width":"3.71",
            "length":"7.61",
            "containerId":"1",
            "containerName":"Medium Container",
            "estimatedVesselLoad":"5",
            "slots":"2"
         },
         "weight":"8.75",
         "weightUnit":"oz",
         "freshRealmCost":null,
         "updateTime":1425340991,
         "categories":[  

         ],
         "tagGroups":[  

         ],
         "imageUrl":null,
         "nutritionInfo":{  
            "Calories":{  
               "amount":"231.67",
               "unit":"KCal",
               "weightGrams":null,
               "percentDaily":12
            },
            "Fat Calories":{  
               "amount":"19",
               "unit":"KCal",
               "weightGrams":null,
               "percentDaily":4
            },
            "Fat":{  
               "amount":"2.11",
               "unit":"g",
               "weightGrams":"2.11",
               "percentDaily":3
            },
            "Saturated Fat":{  
               "amount":"0.15",
               "unit":"g",
               "weightGrams":"0.15",
               "percentDaily":1
            },
            "Polyunsaturated Fat":{  
               "amount":null,
               "unit":"g",
               "weightGrams":null,
               "percentDaily":0
            },
            "Monounsaturated Fat":{  
               "amount":null,
               "unit":"g",
               "weightGrams":null,
               "percentDaily":0
            },
            "Trans Fat":{  
               "amount":null,
               "unit":"g",
               "weightGrams":null,
               "percentDaily":0
            },
            "Cholesterol":{  
               "amount":"7.59",
               "unit":"mg",
               "weightGrams":0.00759,
               "percentDaily":3
            },
            "Carbohydrates":{  
               "amount":"39.58",
               "unit":"g",
               "weightGrams":"39.58",
               "percentDaily":13
            },
            "Fiber":{  
               "amount":"5.44",
               "unit":"g",
               "weightGrams":"5.44",
               "percentDaily":22
            },
            "Sugar":{  
               "amount":"14.27",
               "unit":"g",
               "weightGrams":"14.27",
               "percentDaily":16
            },
            "Protein":{  
               "amount":"13.24",
               "unit":"g",
               "weightGrams":"13.24",
               "percentDaily":26
            },
            "Vitamin A":{  
               "amount":null,
               "unit":"mcg",
               "weightGrams":null,
               "percentDaily":0
            },
            "Thiamine B1":{  
               "amount":null,
               "unit":"mcg",
               "weightGrams":null,
               "percentDaily":0
            },
            "Vitamin B6":{  
               "amount":null,
               "unit":"mcg",
               "weightGrams":null,
               "percentDaily":0
            },
            "Folate B9":{  
               "amount":null,
               "unit":"mcg",
               "weightGrams":null,
               "percentDaily":0
            },
            "Vitamin C":{  
               "amount":null,
               "unit":"mg",
               "weightGrams":0,
               "percentDaily":0
            },
            "Vitamin E":{  
               "amount":null,
               "unit":"mg",
               "weightGrams":0,
               "percentDaily":0
            },
            "Calcium":{  
               "amount":null,
               "unit":"mg",
               "weightGrams":0,
               "percentDaily":0
            },
            "Copper":{  
               "amount":null,
               "unit":"mcg",
               "weightGrams":null,
               "percentDaily":0
            },
            "Iron":{  
               "amount":null,
               "unit":"mg",
               "weightGrams":0,
               "percentDaily":0
            },
            "Phosphorous":{  
               "amount":null,
               "unit":"mg",
               "weightGrams":0,
               "percentDaily":0
            },
            "Potassium":{  
               "amount":null,
               "unit":"mg",
               "weightGrams":0,
               "percentDaily":0
            },
            "Sodium":{  
               "amount":"497.65",
               "unit":"mg",
               "weightGrams":0.49765,
               "percentDaily":21
            }
         },
         "isAvailable":1,
         "shippingLocations":[  

         ],
         "ingredients":[  
            "Orange 5-lb",
            "Red 88-xf ctn",
            "Muffin Whole Wheat English 8\/12 oz #77793",
            "Egg White Patty 3.5\" 160\/1.75 oz #3675766",
            "Red Bell",
            "Ham Hormel Low Sodium Presliced 6\/2 lbs #3133"
         ],
         "subProducts":[  

         ],
         "alergens":[  

         ],
         "itemType":"product",
         "isUsda":false,
         "shelfLife":null,
         "customData":[  

         ]
      }
       ]
    }

## Get A Product [/products/{sku}?key={token}]
Fetch a product by its `sku`.

### GET

+ Parameters
    + sku (required, number, `1`)
    + token (required, string)

+ Response 200 (application/json)

                {
                    "code": 200,
                    "timestamp": 184653225,
                    "data": {
                        "id":"1391",
                        "sku":"1391",
                        "itemName":"Turkey, Egg White & Sundried Tomato Breakfast",
                        "customName":null,
                        "gtin":"10826766900005",
                        "published":"0",
                        "description":null,
                        "size":{
                            "height":"2.26",
                            "width":"3.71",
                            "length":"7.61",
                            "containerId":"1",
                            "containerName":"Medium Container",
                            "estimatedVesselLoad":"5"
                        },
                        "weight":"7.500",
                        "weightUnit":"oz",
                        "freshRealmCost":null,
                        "updateTime":1402509020,
                        "categories":[

                        ],
                        "imageUrl":null,
                        "nutritionInfo":{
                            "Calories":{
                                "amount":"285.36",
                                "unit":"KCal",
                                "weightGrams":null,
                                "percentDaily":15
                            },
                            "Fat Calories":{
                                "amount":"35.86",
                                "unit":"KCal",
                                "weightGrams":null,
                                "percentDaily":8
                            },
                            "Fat":{
                                "amount":"3.98",
                                "unit":"g",
                                "weightGrams":"3.98",
                                "percentDaily":7
                            },
                            "Saturated Fat":{
                                "amount":"1.49",
                                "unit":"g",
                                "weightGrams":"1.49",
                                "percentDaily":8
                            },
                            "Polyunsaturated Fat":{
                                "amount":null,
                                "unit":"g",
                                "weightGrams":null,
                                "percentDaily":0
                            },
                            "Monounsaturated Fat":{
                                "amount":null,
                                "unit":"g",
                                "weightGrams":null,
                                "percentDaily":0
                            },
                            "Trans Fat":{
                                "amount":"0",
                                "unit":"g",
                                "weightGrams":"0",
                                "percentDaily":0
                            },
                            "Cholesterol":{
                                "amount":"14.72",
                                "unit":"mg",
                                "weightGrams":0.01472,
                                "percentDaily":5
                            },
                            "Carbohydrates":{
                                "amount":"48.07",
                                "unit":"g",
                                "weightGrams":"48.07",
                                "percentDaily":17
                            },
                            "Fiber":{
                                "amount":"4.12",
                                "unit":"g",
                                "weightGrams":"4.12",
                                "percentDaily":17
                            },
                            "Sugar":{
                                "amount":"14",
                                "unit":"g",
                                "weightGrams":"14",
                                "percentDaily":16
                            },
                            "Protein":{
                                "amount":"15.84",
                                "unit":"g",
                                "weightGrams":"15.84",
                                "percentDaily":32
                            },
                            "Vitamin A":{
                                "amount":null,
                                "unit":"mcg",
                                "weightGrams":null,
                                "percentDaily":0
                            },
                            "Thiamine B1":{
                                "amount":null,
                                "unit":"mcg",
                                "weightGrams":null,
                                "percentDaily":0
                            },
                            "Vitamin B6":{
                                "amount":null,
                                "unit":"mcg",
                                "weightGrams":null,
                                "percentDaily":0
                            },
                            "Folate B9":{
                                "amount":null,
                                "unit":"mcg",
                                "weightGrams":null,
                                "percentDaily":0
                            },
                            "Vitamin C":{
                                "amount":null,
                                "unit":"mg",
                                "weightGrams":0,
                                "percentDaily":0
                            },
                            "Vitamin E":{
                                "amount":null,
                                "unit":"mg",
                                "weightGrams":0,
                                "percentDaily":0
                            },
                            "Calcium":{
                                "amount":null,
                                "unit":"mg",
                                "weightGrams":0,
                                "percentDaily":0
                            },
                            "Copper":{
                                "amount":null,
                                "unit":"mcg",
                                "weightGrams":null,
                                "percentDaily":0
                            },
                            "Iron":{
                                "amount":null,
                                "unit":"mg",
                                "weightGrams":0,
                                "percentDaily":0
                            },
                            "Phosphorous":{
                                "amount":null,
                                "unit":"mg",
                                "weightGrams":0,
                                "percentDaily":0
                            },
                            "Potassium":{
                                "amount":null,
                                "unit":"mg",
                                "weightGrams":0,
                                "percentDaily":0
                            },
                            "Sodium":{
                                "amount":"549.37",
                                "unit":"mg",
                                "weightGrams":0.54937,
                                "percentDaily":23
                            }
                        },
                        "isAvailable":1,
                        "shippingLocations":[

                        ],
                        "ingredients":[
                            "Grape 1.39\/lb",
                            "Organic Wheat Sandwich Thin 6\/6 ea #3438",
                            "Egg White Patty 3.5\" 160\/1.75 oz #3675766",
                            "Turkey Breast 2\/9-lb 6109724",
                            "Cheese Cream  10\/3 lb #5406467",
                            "Spinach 2.68\/lb",
                            "Sundried Tomato 5.49\/lb"
                        ],
                        "alergens":[

                        ]
                    }
                }



## Fetch Specific Fields [/products/{sku}?key={token}&fields={fieldsList}]
These examples show how to limit the returned data to a specific set of fields.

### List of Ingredients [GET]
+ Parameters
    + token (required, string)
    + sku (required, number)
    + fieldsList (optional, array, `["id", "ingedients"]`)


+ Response 200 (application/json)

        {
            "code": "200",
            "timestamp": "1376939257",
            "data": {
                "id": "2203",
                "ingredients": [{
                    "url": "api2.sandbox.freshrealm.co/items/2201?key=FgDqgXUUP7dh38zb2CSCmcyookXnTgM",
                    "id": "2201",
                    "amount": "0.5",
                    "unit": "ft"
                }]
            }
        }


## Filter Example [/products?key={token}&filter={filter}]
Some fields can be used for filtering a list of resources. `Filter` is a JSON encoded GET attribute that can be defined by a key value pair or as a JSON object with an operator.

### GET
+ Parameters
    + token (required, string)
    + filter (optional, array, `[{"field": "name", "value": "%Egg%", "operator":"like"}]`)


+ Response 200 (application/json)

        {
            "code": 200,
            "timestamp": 1403221501,
            "data": [
                {
                    "id": "1391",
                    "sku": "1391",
                    "itemName": "Turkey, Egg White & Sundried Tomato Breakfast",
                    "customName": null,
                    "gtin": "10826766900005",
                    "published": "0",
                    "description": null,
                    "size": {
                        "height": "2.26",
                        "width": "3.71",
                        "length": "7.61",
                        "containerId": "1",
                        "containerName": "Medium Container",
                        "estimatedVesselLoad": "5"
                        "slots": 1
                    },
                    "weight": "7.500",
                    "weightUnit": "oz",
                    "freshRealmCost": null,
                    "updateTime": 1402509020,
                    "categories": [],
                    "imageUrl": null,
                    "nutritionInfo": {
                        "Calories": {
                            "amount": "285.36",
                            "unit": "KCal",
                            "weightGrams": null,
                            "percentDaily": 15
                        },
                        "Fat Calories": {
                            "amount": "35.86",
                            "unit": "KCal",
                            "weightGrams": null,
                            "percentDaily": 8
                        },
                        "Fat": {
                            "amount": "3.98",
                            "unit": "g",
                            "weightGrams": "3.98",
                            "percentDaily": 7
                        },
                        "Saturated Fat": {
                            "amount": "1.49",
                            "unit": "g",
                            "weightGrams": "1.49",
                            "percentDaily": 8
                        },
                        "Polyunsaturated Fat": {
                            "amount": null,
                            "unit": "g",
                            "weightGrams": null,
                            "percentDaily": 0
                        },
                        "Monounsaturated Fat": {
                            "amount": null,
                            "unit": "g",
                            "weightGrams": null,
                            "percentDaily": 0
                        },
                        "Trans Fat": {
                            "amount": "0",
                            "unit": "g",
                            "weightGrams": "0",
                            "percentDaily": 0
                        },
                        "Cholesterol": {
                            "amount": "14.72",
                            "unit": "mg",
                            "weightGrams": 0.01472,
                            "percentDaily": 5
                        },
                        "Carbohydrates": {
                            "amount": "48.07",
                            "unit": "g",
                            "weightGrams": "48.07",
                            "percentDaily": 17
                        },
                        "Fiber": {
                            "amount": "4.12",
                            "unit": "g",
                            "weightGrams": "4.12",
                            "percentDaily": 17
                        },
                        "Sugar": {
                            "amount": "14",
                            "unit": "g",
                            "weightGrams": "14",
                            "percentDaily": 16
                        },
                        "Protein": {
                            "amount": "15.84",
                            "unit": "g",
                            "weightGrams": "15.84",
                            "percentDaily": 32
                        },
                        "Vitamin A": {
                            "amount": null,
                            "unit": "mcg",
                            "weightGrams": null,
                            "percentDaily": 0
                        },
                        "Thiamine B1": {
                            "amount": null,
                            "unit": "mcg",
                            "weightGrams": null,
                            "percentDaily": 0
                        },
                        "Vitamin B6": {
                            "amount": null,
                            "unit": "mcg",
                            "weightGrams": null,
                            "percentDaily": 0
                        },
                        "Folate B9": {
                            "amount": null,
                            "unit": "mcg",
                            "weightGrams": null,
                            "percentDaily": 0
                        },
                        "Vitamin C": {
                            "amount": null,
                            "unit": "mg",
                            "weightGrams": 0,
                            "percentDaily": 0
                        },
                        "Vitamin E": {
                            "amount": null,
                            "unit": "mg",
                            "weightGrams": 0,
                            "percentDaily": 0
                        },
                        "Calcium": {
                            "amount": null,
                            "unit": "mg",
                            "weightGrams": 0,
                            "percentDaily": 0
                        },
                        "Copper": {
                            "amount": null,
                            "unit": "mcg",
                            "weightGrams": null,
                            "percentDaily": 0
                        },
                        "Iron": {
                            "amount": null,
                            "unit": "mg",
                            "weightGrams": 0,
                            "percentDaily": 0
                        },
                        "Phosphorous": {
                            "amount": null,
                            "unit": "mg",
                            "weightGrams": 0,
                            "percentDaily": 0
                        },
                        "Potassium": {
                            "amount": null,
                            "unit": "mg",
                            "weightGrams": 0,
                            "percentDaily": 0
                        },
                        "Sodium": {
                            "amount": "549.37",
                            "unit": "mg",
                            "weightGrams": 0.54937,
                            "percentDaily": 23
                        }
                    },
                    "isAvailable": 1,
                    "shippingLocations": [],
                    "ingredients": [
                        "Grape 1.39/lb",
                        "Organic Wheat Sandwich Thin 6/6 ea #3438",
                        "Egg White Patty 3.5\" 160/1.75 oz #3675766",
                        "Turkey Breast 2/9-lb 6109724",
                        "Cheese Cream    10/3 lb #5406467",
                        "Spinach 2.68/lb",
                        "Sundried Tomato 5.49/lb"
                    ],
                    "alergens": [],
                    "subProducts": []
                },
                {
                    "id": "1400",
                    "itemName": "Ham & Egg Breakfast Sandwich",
                    "customName": null,
                    "sku": "",
                    "gtin": "10826766900012",
                    "published": "0",
                    "description": null,
                    "size": {
                        "height": "2.26",
                        "width": "3.71",
                        "length": "7.61",
                        "containerId": "1",
                        "containerName": "Medium Container",
                        "estimatedVesselLoad": "5",
                        "slots": "1"
                    },
                    "weight": "8.750",
                    "weightUnit": "oz",
                    "freshRealmCost": null,
                    "updateTime": 1402509020,
                    "categories": [],
                    "imageUrl": null,
                    "nutritionInfo": {
                        "Calories": {
                            "amount": "231.67",
                            "unit": "KCal",
                            "weightGrams": null,
                            "percentDaily": 12
                        },
                        "Fat Calories": {
                            "amount": "19",
                            "unit": "KCal",
                            "weightGrams": null,
                            "percentDaily": 4
                        },
                        "Fat": {
                            "amount": "2.11",
                            "unit": "g",
                            "weightGrams": "2.11",
                            "percentDaily": 4
                        },
                        "Saturated Fat": {
                            "amount": "0.15",
                            "unit": "g",
                            "weightGrams": "0.15",
                            "percentDaily": 1
                        },
                        "Polyunsaturated Fat": {
                            "amount": null,
                            "unit": "g",
                            "weightGrams": null,
                            "percentDaily": 0
                        },
                        "Monounsaturated Fat": {
                            "amount": null,
                            "unit": "g",
                            "weightGrams": null,
                            "percentDaily": 0
                        },
                        "Trans Fat": {
                            "amount": null,
                            "unit": "g",
                            "weightGrams": null,
                            "percentDaily": 0
                        },
                        "Cholesterol": {
                            "amount": "7.59",
                            "unit": "mg",
                            "weightGrams": 0.00759,
                            "percentDaily": 3
                        },
                        "Carbohydrates": {
                            "amount": "39.58",
                            "unit": "g",
                            "weightGrams": "39.58",
                            "percentDaily": 14
                        },
                        "Fiber": {
                            "amount": "5.44",
                            "unit": "g",
                            "weightGrams": "5.44",
                            "percentDaily": 22
                        },
                        "Sugar": {
                            "amount": "14.27",
                            "unit": "g",
                            "weightGrams": "14.27",
                            "percentDaily": 16
                        },
                        "Protein": {
                            "amount": "13.24",
                            "unit": "g",
                            "weightGrams": "13.24",
                            "percentDaily": 27
                        },
                        "Vitamin A": {
                            "amount": null,
                            "unit": "mcg",
                            "weightGrams": null,
                            "percentDaily": 0
                        },
                        "Thiamine B1": {
                            "amount": null,
                            "unit": "mcg",
                            "weightGrams": null,
                            "percentDaily": 0
                        },
                        "Vitamin B6": {
                            "amount": null,
                            "unit": "mcg",
                            "weightGrams": null,
                            "percentDaily": 0
                        },
                        "Folate B9": {
                            "amount": null,
                            "unit": "mcg",
                            "weightGrams": null,
                            "percentDaily": 0
                        },
                        "Vitamin C": {
                            "amount": null,
                            "unit": "mg",
                            "weightGrams": 0,
                            "percentDaily": 0
                        },
                        "Vitamin E": {
                            "amount": null,
                            "unit": "mg",
                            "weightGrams": 0,
                            "percentDaily": 0
                        },
                        "Calcium": {
                            "amount": null,
                            "unit": "mg",
                            "weightGrams": 0,
                            "percentDaily": 0
                        },
                        "Copper": {
                            "amount": null,
                            "unit": "mcg",
                            "weightGrams": null,
                            "percentDaily": 0
                        },
                        "Iron": {
                            "amount": null,
                            "unit": "mg",
                            "weightGrams": 0,
                            "percentDaily": 0
                        },
                        "Phosphorous": {
                            "amount": null,
                            "unit": "mg",
                            "weightGrams": 0,
                            "percentDaily": 0
                        },
                        "Potassium": {
                            "amount": null,
                            "unit": "mg",
                            "weightGrams": 0,
                            "percentDaily": 0
                        },
                        "Sodium": {
                            "amount": "497.65",
                            "unit": "mg",
                            "weightGrams": 0.49765,
                            "percentDaily": 21
                        }
                    },
                    "isAvailable": 1,
                    "shippingLocations": [],
                    "ingredients": [
                        "Orange 5-lb",
                        "Red 88-xf ctn",
                        "Muffin Whole Wheat English 8/12 oz #77793",
                        "Egg White Patty 3.5\" 160/1.75 oz #3675766",
                        "Red Bell",
                        "Ham Hormel Low Sodium Presliced 6/2 lbs #3133"
                    ],
                    "alergens": [],
                    "subProducts": []
                }
            ]
        }

## Limit and Offset Example [/products?key={token}&limit={limit}&offset={offset}]
Retrieving a large list of resources in one request will degrade performance. Use the `limit` and `offset` GET attributes to divide your request into multiple queries. The default value for limit is 100.

### GET

+ Parameters
    + token (required, string)
    + limit (optional, number, `2`)
    + offset (optional, number, `1`)

+ Response 200 (application/json)

        {
            "code": 200,
            "timestamp": 1403221501,
            "data": [
                {
                    "id": "1391",
                    "itemName": "Turkey, Egg White & Sundried Tomato Breakfast",
                    "customName": null,
                    "sku": "",
                    "gtin": "10826766900005",
                    "published": "0",
                    "description": null,
                    "size": {
                        "height": "2.26",
                        "width": "3.71",
                        "length": "7.61",
                        "containerId": "1",
                        "containerName": "Medium Container",
                        "estimatedVesselLoad": "5",
                        "slots": "1"
                    },
                    "weight": "7.500",
                    "weightUnit": "oz",
                    "freshRealmCost": null,
                    "updateTime": 1402509020,
                    "categories": [],
                    "imageUrl": null,
                    "nutritionInfo": {
                        "Calories": {
                            "amount": "285.36",
                            "unit": "KCal",
                            "weightGrams": null,
                            "percentDaily": 15
                        },
                        "Fat Calories": {
                            "amount": "35.86",
                            "unit": "KCal",
                            "weightGrams": null,
                            "percentDaily": 8
                        },
                        "Fat": {
                            "amount": "3.98",
                            "unit": "g",
                            "weightGrams": "3.98",
                            "percentDaily": 7
                        },
                        "Saturated Fat": {
                            "amount": "1.49",
                            "unit": "g",
                            "weightGrams": "1.49",
                            "percentDaily": 8
                        },
                        "Polyunsaturated Fat": {
                            "amount": null,
                            "unit": "g",
                            "weightGrams": null,
                            "percentDaily": 0
                        },
                        "Monounsaturated Fat": {
                            "amount": null,
                            "unit": "g",
                            "weightGrams": null,
                            "percentDaily": 0
                        },
                        "Trans Fat": {
                            "amount": "0",
                            "unit": "g",
                            "weightGrams": "0",
                            "percentDaily": 0
                        },
                        "Cholesterol": {
                            "amount": "14.72",
                            "unit": "mg",
                            "weightGrams": 0.01472,
                            "percentDaily": 5
                        },
                        "Carbohydrates": {
                            "amount": "48.07",
                            "unit": "g",
                            "weightGrams": "48.07",
                            "percentDaily": 17
                        },
                        "Fiber": {
                            "amount": "4.12",
                            "unit": "g",
                            "weightGrams": "4.12",
                            "percentDaily": 17
                        },
                        "Sugar": {
                            "amount": "14",
                            "unit": "g",
                            "weightGrams": "14",
                            "percentDaily": 16
                        },
                        "Protein": {
                            "amount": "15.84",
                            "unit": "g",
                            "weightGrams": "15.84",
                            "percentDaily": 32
                        },
                        "Vitamin A": {
                            "amount": null,
                            "unit": "mcg",
                            "weightGrams": null,
                            "percentDaily": 0
                        },
                        "Thiamine B1": {
                            "amount": null,
                            "unit": "mcg",
                            "weightGrams": null,
                            "percentDaily": 0
                        },
                        "Vitamin B6": {
                            "amount": null,
                            "unit": "mcg",
                            "weightGrams": null,
                            "percentDaily": 0
                        },
                        "Folate B9": {
                            "amount": null,
                            "unit": "mcg",
                            "weightGrams": null,
                            "percentDaily": 0
                        },
                        "Vitamin C": {
                            "amount": null,
                            "unit": "mg",
                            "weightGrams": 0,
                            "percentDaily": 0
                        },
                        "Vitamin E": {
                            "amount": null,
                            "unit": "mg",
                            "weightGrams": 0,
                            "percentDaily": 0
                        },
                        "Calcium": {
                            "amount": null,
                            "unit": "mg",
                            "weightGrams": 0,
                            "percentDaily": 0
                        },
                        "Copper": {
                            "amount": null,
                            "unit": "mcg",
                            "weightGrams": null,
                            "percentDaily": 0
                        },
                        "Iron": {
                            "amount": null,
                            "unit": "mg",
                            "weightGrams": 0,
                            "percentDaily": 0
                        },
                        "Phosphorous": {
                            "amount": null,
                            "unit": "mg",
                            "weightGrams": 0,
                            "percentDaily": 0
                        },
                        "Potassium": {
                            "amount": null,
                            "unit": "mg",
                            "weightGrams": 0,
                            "percentDaily": 0
                        },
                        "Sodium": {
                            "amount": "549.37",
                            "unit": "mg",
                            "weightGrams": 0.54937,
                            "percentDaily": 23
                        }
                    },
                    "isAvailable": 1,
                    "shippingLocations": [],
                    "ingredients": [
                        "Grape 1.39/lb",
                        "Organic Wheat Sandwich Thin 6/6 ea #3438",
                        "Egg White Patty 3.5\" 160/1.75 oz #3675766",
                        "Turkey Breast 2/9-lb 6109724",
                        "Cheese Cream    10/3 lb #5406467",
                        "Spinach 2.68/lb",
                        "Sundried Tomato 5.49/lb"
                    ],
                    "alergens": []
                },
                {
                    "id": "1400",
                    "itemName": "Ham & Egg Breakfast Sandwich",
                    "customName": null,
                    "sku": "",
                    "gtin": "10826766900012",
                    "published": "0",
                    "description": null,
                    "size": {
                        "height": "2.26",
                        "width": "3.71",
                        "length": "7.61",
                        "containerId": "1",
                        "containerName": "Medium Container",
                        "estimatedVesselLoad": "5"
                    },
                    "weight": "8.750",
                    "weightUnit": "oz",
                    "freshRealmCost": null,
                    "updateTime": 1402509020,
                    "categories": [],
                    "imageUrl": null,
                    "nutritionInfo": {
                        "Calories": {
                            "amount": "231.67",
                            "unit": "KCal",
                            "weightGrams": null,
                            "percentDaily": 12
                        },
                        "Fat Calories": {
                            "amount": "19",
                            "unit": "KCal",
                            "weightGrams": null,
                            "percentDaily": 4
                        },
                        "Fat": {
                            "amount": "2.11",
                            "unit": "g",
                            "weightGrams": "2.11",
                            "percentDaily": 4
                        },
                        "Saturated Fat": {
                            "amount": "0.15",
                            "unit": "g",
                            "weightGrams": "0.15",
                            "percentDaily": 1
                        },
                        "Polyunsaturated Fat": {
                            "amount": null,
                            "unit": "g",
                            "weightGrams": null,
                            "percentDaily": 0
                        },
                        "Monounsaturated Fat": {
                            "amount": null,
                            "unit": "g",
                            "weightGrams": null,
                            "percentDaily": 0
                        },
                        "Trans Fat": {
                            "amount": null,
                            "unit": "g",
                            "weightGrams": null,
                            "percentDaily": 0
                        },
                        "Cholesterol": {
                            "amount": "7.59",
                            "unit": "mg",
                            "weightGrams": 0.00759,
                            "percentDaily": 3
                        },
                        "Carbohydrates": {
                            "amount": "39.58",
                            "unit": "g",
                            "weightGrams": "39.58",
                            "percentDaily": 14
                        },
                        "Fiber": {
                            "amount": "5.44",
                            "unit": "g",
                            "weightGrams": "5.44",
                            "percentDaily": 22
                        },
                        "Sugar": {
                            "amount": "14.27",
                            "unit": "g",
                            "weightGrams": "14.27",
                            "percentDaily": 16
                        },
                        "Protein": {
                            "amount": "13.24",
                            "unit": "g",
                            "weightGrams": "13.24",
                            "percentDaily": 27
                        },
                        "Vitamin A": {
                            "amount": null,
                            "unit": "mcg",
                            "weightGrams": null,
                            "percentDaily": 0
                        },
                        "Thiamine B1": {
                            "amount": null,
                            "unit": "mcg",
                            "weightGrams": null,
                            "percentDaily": 0
                        },
                        "Vitamin B6": {
                            "amount": null,
                            "unit": "mcg",
                            "weightGrams": null,
                            "percentDaily": 0
                        },
                        "Folate B9": {
                            "amount": null,
                            "unit": "mcg",
                            "weightGrams": null,
                            "percentDaily": 0
                        },
                        "Vitamin C": {
                            "amount": null,
                            "unit": "mg",
                            "weightGrams": 0,
                            "percentDaily": 0
                        },
                        "Vitamin E": {
                            "amount": null,
                            "unit": "mg",
                            "weightGrams": 0,
                            "percentDaily": 0
                        },
                        "Calcium": {
                            "amount": null,
                            "unit": "mg",
                            "weightGrams": 0,
                            "percentDaily": 0
                        },
                        "Copper": {
                            "amount": null,
                            "unit": "mcg",
                            "weightGrams": null,
                            "percentDaily": 0
                        },
                        "Iron": {
                            "amount": null,
                            "unit": "mg",
                            "weightGrams": 0,
                            "percentDaily": 0
                        },
                        "Phosphorous": {
                            "amount": null,
                            "unit": "mg",
                            "weightGrams": 0,
                            "percentDaily": 0
                        },
                        "Potassium": {
                            "amount": null,
                            "unit": "mg",
                            "weightGrams": 0,
                            "percentDaily": 0
                        },
                        "Sodium": {
                            "amount": "497.65",
                            "unit": "mg",
                            "weightGrams": 0.49765,
                            "percentDaily": 21
                        }
                    },
                    "isAvailable": 1,
                    "shippingLocations": [],
                    "ingredients": [
                        "Orange 5-lb",
                        "Red 88-xf ctn",
                        "Muffin Whole Wheat English 8/12 oz #77793",
                        "Egg White Patty 3.5\" 160/1.75 oz #3675766",
                        "Red Bell",
                        "Ham Hormel Low Sodium Presliced 6/2 lbs #3133"
                    ],
                    "alergens": []
                }
            ]
        }

# Group Orders

## Place An Order [/orders]
To create an order, you must pass a `customerId`. If the `customerId` is not provided an error will be thrown. There are four different statuses that can be used to send order 
data: `cancelled`, `test`,`preliminary`, `authorized`.

|status | description |
|------|-------------|
|`preliminary`| orders in queue waiting to be processed due to not being able to meet cutoff time or weekly subscription plans |
|`authorized` | authorized transactions |
|`processed` | processed transactions |
|`in_transit`| orders in transit |
|`at_customer`| vessel with the customer and waiting for pickup |
|`cancelled` | cancelled order |
|`in_transit_back` | vessel on its way back to the facility  |
|`vessel_returned` | vessel returned back to the facility|

### Attributes
| field           | Can Edit | description |
|-----------------------|-----------|---------------------------------------|
| `id`            |  | FreshRealm Order Id |                   
| `customerId` | X |  Customer Id, see `Customers` resource |
| `codropId` | X |  Codrop Id, see `codrop` resource  |
| `shippingAddressId` | X |  Shipping Address Id |
| `status` | X |  Customer Id, see `Customers` resource |
| `manufactureDate` |  |  Manufacture Date for the order |
| `freshrealmSubtotal` |  |  Freshrealm total cost |
| `shippingAndHandling` |  |  Shipping and Handling charges for the order |
| `cutoffTime` |  |  cutoff time to accept order |
| `totalCost` |  |  total cost for the order |
| `totalPrice` | X |  total price including Shipping and Handling |
| `salesTax` | X |  sales tax for the order |
| `updateTime` |  | update time for the order |
| `createTime` |  |  Create time when the order was created |
| `orderNumber` | X |  order number  |
| `deliveryDate` | X |  delivery date for the order |
| `items` | X | list of all items in the order |
| `pickupDate` | X |  pickup date for the order|
| `shipMethod` | X* |  ship method for the order |
| `warnings` |  |  any warnings or instructions for unexpected scenarios |
| `transactionId` | X |  transaction id from merchant services provider |
| `trackingNumber` |  |  Vessel tracking number |
| `customData` |  |  Key value pairs of data associated with the order |

 *ship method can not be edited once created.

#### Items Attributes
| field | required  | type      | example                           | description |
|---------------|:-:|-----------|-----------------------------------|-------------|
| `sku`          | * | string       | `1`                               | Merchant SKU number |
| `quantity`    | * | int       | `1`                               | Quantity |

Products should be ordered by SKU.  The SKU can be modified on FRC merchant pages.

### Place An Order [POST]

+ Request (application/json)

    + Body

            {
                "status": "authorized",
                "customerId": 7069,
                "shippingAddressId": 7427,
                "items": [{
                    "sku": "1674",
                    "quantity": 3
                },{
                    "sku": "1675",
                    "quantity": 4
                }],
                "totalPrice": "20.98",
                "salesTax": "0",
                "deliveryDate": "2014-06-01",
            }

+ Response 200 (application/json)

        {
            "code": 200,
            "timestamp": 1401213818,
            "data": {
                "id": "10489",
                "customerId": "7069",
                "codropId": null,
                "shippingAddressId": "7427",
                "status": "authorized",
                "manufactureDate": "2014-06-02",
                "freshrealmSubtotal": 4.05,
                "shippingAndHandling": 30.79182,
                "cutOffTime": "2014-05-30 17:00",
                "totalCost": 34.84182,
                "totalPrice": "20.98",
                "salesTax": "0",
                "updateTime": 1401213818,
                "createTime": 1401213818,
                "orderNumber": null,
                "deliveryDate": "2014-06-02",
                "items": [
                    {
                        "sku": "1674",
                        "quantity": 3
                    },
                    {
                        "sku": "1675",
                        "quantity": 4
                    }
                ],
                "pickupDate": null,
                "shipMethod": "FEDEX_GROUND",
                "warnings": [
                    {
                        "type": "modifiedDeliveryDate",
                        "message": "Delivery date was modified"
                    }
                ]
            }
        }

## List Orders [/orders?key={token}&limit={limit}]

Retrieve all the latest orders (default limit is 100 results)

### List Orders [GET]
+ Parameters
    + token (required, string)
    + limit (optional, number, `3`)

+ Response 200 (application/json)

        {
            "code": 200,
            "timestamp": 1401213818,
            "data": [{
                "id": "10489",
                "customerId": "7069",
                "codropId": null,
                "shippingAddressId": "7427",
                "status": "authorized",
                "manufactureDate": "2014-06-02",
                "freshrealmSubtotal": 4.05,
                "shippingAndHandling": 30.79182,
                "cutOffTime": "2014-05-30 17:00",
                "totalCost": 34.84182,
                "totalPrice": "20.98",
                "salesTax": "0",
                "updateTime": 1401213818,
                "createTime": 1401213818,
                "orderNumber": null,
                "deliveryDate": "2014-06-02",
                "items": [
                    {
                        "sku": "1674",
                        "quantity": 3
                    },
                    {
                        "sku": "1675",
                        "quantity": 4
                    }
                ],
                "pickupDate": null,
                "shipMethod": "FEDEX_GROUND"
            },{
                "id": "10490",
                "customerId": "7069",
                "codropId": null,
                "shippingAddressId": "7427",
                "status": "authorized",
                "manufactureDate": "2014-06-02",
                "freshrealmSubtotal": 4.05,
                "shippingAndHandling": 30.79182,
                "cutOffTime": "2014-05-30 17:00",
                "totalCost": 34.84182,
                "totalPrice": "20.98",
                "salesTax": "0",
                "updateTime": 1401213818,
                "createTime": 1401213818,
                "orderNumber": null,
                "deliveryDate": "2014-06-02",
                "items": [
                    {
                        "sku": "1674",
                        "quantity": 3
                    },
                    {
                        "sku": "1675",
                        "quantity": 4
                    }
                ],
                "pickupDate": null,
                "shipMethod": "FEDEX_GROUND"
            },{
                "id": "10491",
                "customerId": "7069",
                "codropId": null,
                "shippingAddressId": "7427",
                "status": "authorized",
                "manufactureDate": "2014-06-02",
                "freshrealmSubtotal": 4.05,
                "shippingAndHandling": 30.79182,
                "cutOffTime": "2014-05-30 17:00",
                "totalCost": 34.84182,
                "totalPrice": "20.98",
                "salesTax": "0",
                "updateTime": 1401213818,
                "createTime": 1401213818,
                "orderNumber": null,
                "deliveryDate": "2014-06-02",
                "items": [
                    {
                        "sku": "1674",
                        "quantity": 3
                    },
                    {
                        "sku": "1675",
                        "quantity": 4
                    }
                ],
                "pickupDate": null,
                "shipMethod": "FEDEX_GROUND"
            }]
        }

## Order Resource [/orders/{orderId}?key={token}]
Use this URL to `GET` order information or `PUT` changes to the order.

### Fetch Order [GET]
+ Parameters
    + orderId (required, number, `10490`)
    + token (required, string)

+ Response 200 (application/json)

        {
            "code": 200,
            "timestamp": 1402706999
            "data": {
                "id": "10490",
                "customerId": "7069",
                "codropId": null,
                "shippingAddressId": "7427",
                "status": "authorized",
                "manufactureDate": "2014-06-02",
                "freshrealmSubtotal": 4.05,
                "shippingAndHandling": 30.79182,
                "cutOffTime": "2014-05-30 17:00",
                "totalCost": 34.84182,
                "totalPrice": "20.98",
                "salesTax": "0",
                "updateTime": 1401213818,
                "createTime": 1401213818,
                "orderNumber": null,
                "deliveryDate": "2014-06-02",
                "items": [
                    {
                        "sku": "1674",
                        "quantity": 3
                    },
                    {
                        "sku": "1675",
                        "quantity": 4
                    }
                ],
                "pickupDate": null,
                "shipMethod": "fedex_ground"
            }
        }

### Update Delivery Date [PUT]      
Have order delivered on different date than originally submitted. Delivery date change can be executed before cut off time of old and new delivery date. Use dates from availability calendar as input to this API call.
If delivery date is not available server returns 400 error.

+ Parameters
    + orderId (required, number, `109`)
    + token (required, string)
    
+ Request (application/json)
    
    + Body

            {
                "deliveryDate": "2015-03-14",
            }
    
+ Response 200 (application/json)

        {
            "code": 200,
            "timestamp": 1377020859,
            "data": {
                "id":109,
                "deliveryDate": "2015-03-14",
            }
        }

### Update Delivery Address [PUT]      
Delivery address can be updated after cut off time and before shipping label is printed. Address can be changed as long as the shipping service stays the same. For example, it is not possible to update address from California to New York if Vessel is supposed to be delivered by ground service. It is possible to change ground regions as long as the change is performed before cut off time for both zones. Zone change might create
new cut off time.

+ Parameters
    + orderId (required, number, `109`)
    + token (required, string)
    
+ Request (application/json)
    
    + Body

            {
                "shippingAddressId": "79920",
            }

+ Response 200 (application/json)

        {
            "code": 200,
            "timestamp": 1377020859,
            "data": {
                "id":109,
                "shippingAddressId": "79920",
            }
        }

### Update Products [PUT]      
Customer can swap items on order before cut off time. If swap is performed, merchant is responsible for differences in food price. Swaps can be executed before cut off time, but cut off time might be updated as well. This operation accepts full final set of products after swap. It is recommended to use `vesselLoad` API call to make sure item change won't result into use of additional Vessel.

+ Parameters
    + orderId (required, number, `109`)
    + token (required, string)
    
+ Request (application/json)
    
    + Body

            {
                "items": [
                    {
                        "sku": "1674",
                        "quantity": 3
                    },
                    {
                        "sku": "1675",
                        "quantity": 4
                    }
            }

+ Response 200 (application/json)

        {
            "code": 200,
            "timestamp": 1377020859,
            "data": {
                "id":109,
                "items": [
                    {
                        "sku": "1674",
                        "quantity": 3
                    },
                    {
                        "sku": "1675",
                        "quantity": 4
                    }
                ],
            }
        }

### Update Status [PUT] 
Order can be canceled through status updated. Supported input values for status update are `preliminary`, `authorized`, and `cancelled`. Preliminary order will be canceled if it is not updated to `authorized` before cut off time.
        
## Cancel an Order [/orders/cancel/{orderId}?key={token}]
        
### Cancel an Order [PUT]
Order can be typically canceled before cut off time with no consequences. API supports cancels after cut off time for approved merchants. Merchant is billed for ordered food and handling fees for orders canceled after cut off time, but not for shipping fee. Order can be canceled up to the moment before shipping label is printed, which is a day before delivery.

+ Parameters
    + orderId (required, number, `109`)
    + token (required, string)

+ Response 200 (application/json)

        {
            "code": 200,
            "timestamp": 1377020859,
            "data": {
                "id":109,
                "status": "cancelled",
                "cancelRequestDetail": {
                    "id" => 54114,
                    "reason" => "API test",
                    "event" => "Canceled after cut off time",
                    "cancelTime" => "2015-03-25 17:33:39"
                    "source" => "api"
                }
            }
        }
        
## Reschedule Pickup [/orders/reschedulepickup/{orderId}?key={token}]
Carrier pickup is typically scheduled the next business day after delivery. FRC will reschedule Vessel pickup twice after first unsuccessful attempt. This API call allows user to delay Vessel pickup for up to one week. Old pickup request is canceled automatically and new pickup request is created. Even though pickup request is scheduled for order, in practice it is for pickup address and date. Carrier will pickup all Vessels from all customers waiting at the pickup address.

Pickup requests can be scheduled a maximum of 7 days in advanced and must be scheduled for after the delivery date of the order.

Pickup address id can be optionally passed into this call to change pickup location.  If pickup can not be scheduled for the requested date it will be scheduled for the next available date.


### Reschedule For Different Date [PUT]

+ Parameters
    + orderId (required, number, `109`)
    + token (required, string)

+ Request (application/json)
    
    + Body

            {
                "date": "2015-03-14"
            }
    
+ Response 200 (application/json)

    {
        "code": 200,
        "timestamp": 1377020859,
        "data": {
            "orderId":109,
            "addressId": "1154",
            "date" => "2015-03-14"
            }
        }
    }
    
### Reschedule For Different Address [PUT]

+ Parameters
    + orderId (required, number, `109`)
    + token (required, string)

+ Request (application/json)
    
    + Body

            {
                "addressId": "1154"
            }
    
+ Response 200 (application/json)

    {
        "code": 200,
        "timestamp": 1377020859,
        "data": {
            "orderId":109,
            "addressId": "1154",
            "date" => "2015-03-14"
            }
        }
    }
    
## Create Shipping Label [/orders/createshippinglabel/{orderId}?key={token}]

Create new return shipping labels for all of the vessels used by an order.  This method returns an array of tracking numbers for the newly created shipping label(s) which can be used with the Shipping Label Download method to retrieve a PDF of the shipping label.

### Create Shipping Label [GET]

+ Parameters
    + orderId (required, number, `109`)
    + token (required, string)

+ Response 200 (application/json)

        {
            "code": 200,
            "timestamp": 1430512169,
            "data": [
                "99998458496"
            ]
        }
        
## Shipping Label Download [/orders/shippinglabeldownload/{trackingNumber}?key={token}]

Download a shipping label created with the Create Shipping Label method.  Shipping labels are PDF documents in letter format.

### Shipping Label Download [GET]

+ Parameters
    + trackingNumber (required, string, `99998458496`)
    + token (required, string)

+ Response 200 (application/octet-stream)

        *BINARY DATA*

# Group Customers

This operation can be used to find a customer and to get all the orders for the customer.

|Field                      |Can edit        |Description |
|---------------------------|---------------|------------|
|id                         |            |FreshRealm customer id |
|myCustomerID               |    X        |The external customer id (customer id set by customers of FreshRealm) |
|firstName                  |    X       |First name of customer |
|lastName                   |    X       |Last name of customer |
|email                      |    X       |Email Address |
|phoneNumber                |    X       |Phone Number |
|mobilePhoneNumber          |    X       |Mobile Phone Number |
|isAccountActive            |            |is customer Active |
|address                    |    X*       |List of the latest shipping address |
|emailVerified              |    X       |Email Address is verified|
|extraAttributes            |    X       |All other attributes related to the customer |
|addresses                  |            |List of all the shipping addresses |

  *cannot be edited once created
  
## Create new Customer with address [/customers?key={token}]

### Create new Customer with address[POST]

+ Parameters
    + token (required, string)

+ Request (application/json)
            
        {  "firstName": "Mark",
            "lastName": "Zuckeberg",
            "email": "zuckeberg@freshrealm.co",
            "mobilePhoneNumber": "888-457-4547",
            "address": {
                    "streetAndNumber": "139 Wall St",
                    "aptSuite": "H",
                    "city": "Ventura",
                    "state": "CA",
                    "zipcode": "93001"
                }
        }

+ Response 200 (application/json)

        {
            "code": 200,
            "timestamp": 1377020859,
            "data": 
            {
            "firstName": "Mark",
            "lastName": "Zuckeberg",
            "email": "zuckeberg@freshrealm.co",
            "mobilePhoneNumber": "888-457-4547",
            "address": {
                    "streetAndNumber": "139 Wall St",
                    "aptSuite": "H",
                    "city": "Ventura",
                    "state": "CA",
                    "zipcode": "93001"
                }
        }
         

#Group Addresses

This operation can be used to find addresses and get all the addresses for a customer.

|Field                      |Can edit        |Description |
|---------------------------|---------------|------------|
|`phoneNumber`            | X*  |Recipient phone number |
|`fullName`            | X*  |Recipient name |
|`prefix`            | X  |Address Prefix |
|`streetAndNumber`   |  X* |Example: 476 Main St       |
|`aptSuite`          | X  |Apartment number, unit number or suite. Example: Unit A        |
|`city`              | X  |City name      |
|`state`             | X  |State name - Example: CA or California     |
|`zipcode`           | X*  |Zipcode - Example: 93001     |
|`deliveryInstructions`| X |Special Delivery Instructions     |
|`pickupInstuctions` |  X | Pickup instructions for return of Vessel |
|`pickupLocation` |  X |Pickup location for the vessel    |
|`type`           |  X |Residntial or Commercial    |
|`verifyShipper`  | X  |Set to `1` to run validation against address database. This extra validation can catch incorrect zipcode or house number. Use this feature to make sure that the package will be delivered to the right address. |
|`id`             |   |Address ID      |
|`customerId`     |  X* |id of the customer      |
|`status`         |   |FRC is using external data source for address validation. Possible values are: `confirmed`, `missing_secondary`, `wrong_secondary`. Missing or wrong secondary means that apartment number is incorrect. Shipment still might be delivered (to apartment office for example), but there is a chance that carrier won't be able to find the right unit.|
|`lat`            |   |Latitude of the customer address|
|`lng`            |   |Longitude of the customer address     |
|`shippingLocation`  |    |Shipping Location of the facility  |
|`uniqueIdentifier` |    |Unique Identifier for the address    |
|`updateTime`      |    |Update time for the last address update |

    *Required

## Retrieve addresses [/addresses?key={token}]

###GET

+ Parameters
    + token (required, string)

+ Response 200 (application/json)

        {
           "code": 200,
           "timestamp": 1401126092,
           "data": [
                {
                   "prefix": "Deliver to"
                   "streetAndNumber": "139 Wall St"
                   "aptSuite": "Apt H"
                   "city": "Ventura"
                   "state": "CA"
                   "zipcode": "93001"
                   "deliveryInstructions": "Knock the door",
                   "pickupInstructions": "Knock the door",
                   "pickupLocation": "back_door",
                   "type": "residential",
                   "status": "confirmed",
                   "lat": "34.28329",
                   "lng": "-119.29941",
                   "shippingLocation" : "null",
                   "uniqueIdentifier": "139-WALL-ST-APT-H-VENTURA-CA"
                }
            ]
        }

# Group Categories

This operation can be used to find available categories to which products belong.  See the ‘Categories’  resource table for more information.

| Field | Can Edit   | Description |
|-------|---------|-------------|
| `id` |   | Category id |
| `parentId` | X  | Id of a parent category if category is a subcategory of another category |
| `name` | X  | Category name |
| `published` | X | Whether a category is activated or not |


## List Categories [/categories?key={token}]

### GET

+ Parameters
    + token (required, string)

+ Response 200 (application/json)

        {
            "code": 200,
            "timestamp": 1401215276,
            "data":
                {
                    "id": "261",
                    "name": "Awesomeness",
                    "parentId": null,
                    "published": "yes",
                    "all_roles": "null",
                    "phone_number":null
                }
        }

##Retrieve An Individual Category [/categories/{categoryId}?key={token}]
### GET
+ Parameters
    + token (required, string)
    + categoryId (required, number)

+ Response 200 (application/json)

            {
               "id": "293",
               "parentId": "",
               "name": "Category 1",
               "published": "1"
            }
        
        
#Group Tag Groups

Manage tag groups.  All tags must belong to a tag group.

| Field | Can Edit   | Description |
|-------|---------|-------------|
| `id` |   | Tag group id |
| `name` | X  | Tag group name |
| `maxTags` | X | Maximum number of distinct tags to allow in group |

## Tag Groups [/taggroups?key={token}]

List all tag groups and create new tag groups.

### List Tag Groups [GET]

+ Parameters
    + token (required, string)

+ Response 200 (application/json)

        {
            "code": 200,
            "timestamp": 1429659071,
            "data": [
                {
                    "id": "tag-group-1-16",
                    "name": "Tag Group 1",
                    "maxTags": null
                },
                {
                    "id": "tag-group-2-16",
                    "name": "Tag Group 2",
                    "maxTags": null
                }
            ]
        }
        
### Create new Tag Group [POST]

+ Parameters
    + token (required, string)

+ Request (application/json)
            
        {
            "name": "Tag Group 4"
        }

+ Response 200 (application/json)

        {
            "code": 200,
            "timestamp": 1429659179,
            "data": {
                "id": "tag-group-4-16",
                "name": "Tag Group 4",
                "maxTags": null
            }
        }
        
## Tag Group [/taggroups/{id}?key={token}]

Manipulate a tag group by its `id`.

### Get Tag Group [GET]

+ Parameters
    + id (required, string)
    + token (required, string)

+ Response 200 (application/json)

        {
            "code": 200,
            "timestamp": 1429659238,
            "data": {
                "id": "tag-group-4-16",
                "name": "Tag Group 4",
                "maxTags": null
            }
        }

### Modify Tag Group [PUT]

+ Parameters
    + id (required, string)
    + token (required, string)
    
+ Request (application/json)

        {
            "maxTags": 5 
        }

+ Response 200 (application/json)

        {
            "code": 200,
            "timestamp": 1429659295,
            "data": {
                "id": "tag-group-4-16",
                "name": "Tag Group 4",
                "maxTags": 5
            }
        }
        
### Delete Tag Group [DELETE]

+ Parameters
    + id (required, string)
    + token (required, string)

+ Response 200 (application/json)

        {
            "code": 200,
            "timestamp": 1429660986,
            "data": {
                "status": "OK"
            }
        }

#Group Tags

Manage tags.  All tags must belong to a tag group.

| Field | Can Edit   | Description |
|-------|---------|-------------|
| `id` |   | Tag id |
| `tagGroupId` | X  | Tag group id |
| `name` | X  | Tag name |
| `sort` | X | Optional numeric sort value |

## Tags [/tags?key={token}]

List all tags and create new tags.

### List Tags [GET]

+ Parameters
    + token (required, string)

+ Response 200 (application/json)

        {
            "code": 200,
            "timestamp": 1429659511,
            "data": [
                {
                    "id": "tag-1-tag-group-4-16",
                    "tagGroupId": "tag-group-4-16",
                    "name": "Tag 1",
                    "sort": null
                },
                {
                    "id": "tag-2-tag-group-4-16",
                    "tagGroupId": "tag-group-4-16",
                    "name": "Tag 2",
                    "sort": null
                }
            ]
        }
        
### Create new Tag [POST]

+ Parameters
    + token (required, string)

+ Request (application/json)
            
        {
            "name": "Tag 3",
            "tagGroupId": "tag-group-4-16",
            "sort": 0
        }

+ Response 200 (application/json)

        {
            "code": 200,
            "timestamp": 1429659487,
            "data": {
                "id": "tag-3-tag-group-4-16",
                "tagGroupId": "tag-group-4-16",
                "name": "Tag 3",
                "sort": 0
            }
        }
        
## Tag [/tags/{id}?key={token}]

Manipulate a tag by its `id`.

### Get Tag [GET]

+ Parameters
    + id (required, string)
    + token (required, string)

+ Response 200 (application/json)

        {
            "code": 200,
            "timestamp": 1429659680,
            "data": {
                "id": "tag-3-tag-group-4-16",
                "tagGroupId": "tag-group-4-16",
                "name": "Tag 3",
                "sort": "0"
            }
        }
        
### Modify Tag [PUT]

+ Parameters
    + id (required, string)
    + token (required, string)
    
+ Request (application/json)
            
        {
            "sort": -1
        }

+ Response 200 (application/json)

        {
            "code": 200,
            "timestamp": 1429659720,
            "data": {
                "id": "tag-3-tag-group-4-16",
                "tagGroupId": "tag-group-4-16",
                "name": "Tag 3",
                "sort": -1
            }
        }
        
### Delete Tag [DELETE]

+ Parameters
    + id (required, string)
    + token (required, string)

+ Response 200 (application/json)

        {
            "code": 200,
            "timestamp": 1429661335,
            "data": {
                "status": "OK"
            }
        }
        
#Group Product Tags

Manage the tags that are set on products.

| Field | Can Edit   | Description |
|-------|---------|-------------|
| `id` |   | Tag id |
| `productId` | X  | Product id |
| `tagId` | X  | Tag id |

## Product Tags [/producttags?key={token}]

List all product tags and create new product tags.

### List Product Tags [GET]

+ Parameters
    + token (required, string)

+ Response 200 (application/json)

        {
            "code": 200,
            "timestamp": 1429660634,
            "data": [
                {
                    "id": "1997_tag-1-tag-group-4-16",
                    "productId": "1997",
                    "tagId": "tag-1-tag-group-4-16"
                },
                {
                    "id": "1997_tag-2-tag-group-4-16",
                    "productId": "1997",
                    "tagId": "tag-2-tag-group-4-16"
                }
            ]
        }
        
### Create new Product Tag [POST]

+ Parameters
    + token (required, string)

+ Request (application/json)
            
        {
            "tagId": "tag-3-tag-group-4-16",
            "productId": 1997
        }

+ Response 200 (application/json)

        {
            "code": 200,
            "timestamp": 1429660669,
            "data": {
                "id": "1997_tag-3-tag-group-4-16",
                "productId": "1997",
                "tagId": "tag-3-tag-group-4-16"
            }
        }
        
## Product Tag [/producttags/{id}?key={token}]

Manipulate a product tag by its `id`.

### Get Product Tag [GET]

+ Parameters
    + id (required, string)
    + token (required, string)

+ Response 200 (application/json)

        {
            "code": 200,
            "timestamp": 1429660738,
            "data": {
                "id": "1997_tag-3-tag-group-4-16",
                "productId": "1997",
                "tagId": "tag-3-tag-group-4-16"
            }
        }
        
### Modify Product Tag [PUT]

+ Parameters
    + id (required, string)
    + token (required, string)
    
+ Request (application/json)
            
        {
            "tagId": "tag-2-tag-group-4-16"
        }

+ Response 200 (application/json)

        {
            "code": 200,
            "timestamp": 1429660784,
            "data": {
                "id": "1997_tag-2-tag-group-4-16",
                "productId": "1997",
                "tagId": "tag-2-tag-group-4-16"
            }
        }

### Delete Product Tag [DELETE]

+ Parameters
    + id (required, string)
    + token (required, string)

+ Response 200 (application/json)

        {
            "code": 200,
            "timestamp": 1429660868,
            "data": {
                "status": "OK"
            }
        }
        
#Group Transactions

This operation can be used to retrieve a list of all the transactions. Get transactions will give you the ids for those requested transaction to allow you to then get orders for them.

| Field | Can Write | Description |
|-------|----------|-------------|
| id |  |    |
| succeeded | | successful transaction |
| message | | message for transaction status |
| shippingAndHandling | X | Shipping and Handling Charges |
| salesTax | X | Sales Tax Charges |
| subTotal | X | Subtotal of all items excluding sales Tax |
| total | X | Subtotal including Sales Tax |
| shippingAddressId |  | Shipping Address Id for the customer |
| paymentMethodToken | X | Token for payment Method |
| deliveryDate | X | Estimated delivery Date for the shipment |
| selectedDeliveryDates | X | Future delivery Date selected by the customer |
| isAuthorized | | transaction is approved |
| cardInfo | | Card information for the customer |
| complete |  | transaction is approved and completed |
| productLines | X | Line items for product details |
| customerId | X | Customer Id for the shopper |
| externalId | X | External Id for the shopper |
| createTime |  | Time Transaction was created |
| updateTime |  | Time Transaction was updated |
| confirmationUri | X | Confirmation Uri for the transaction |
| redirectUri | X | Redirect Uri for the transaction |
| authorizationToken | |  Authorization token for the transaction |
| authorizeTime | | Time transaction was authorized |
| transactionTime | | Time of the transaction |
| refunds | |  refunds for the transaction |
| vessels | X | Time transaction was authorized |
| selectShipping |X | All shipping Methods  |
| shippingMargin |X | Margin on shipping cost  |
| shippingService | | Select a specific shipping method |
| discount | X | Discount that is applied to sub-total |
| customData | X | Set of key value pairs |

## Transaction details [/transactions?key={token}]
### GET [GET]

+ Parameters
    + token (required, string)
    
+ Response 200 (application/json)

    {
        "code": 200,
        "timestamp": 1427751559,
        "data": [
            {
                "id": "159847",
                "succeeded": "1",
                "message": "Succeeded!",
                "subTotal": "27.27",
                "shippingAndHandling": "0.00",
                "salesTax": null,
                "total": "27.27",
                "shippingAddressId": "9428",
                "paymentMethodToken": "NYP7dTA0eDZjyFrfcC5hl8pdNLY",
                "deliveryDate": "2015-04-01",
                "selectedDeliveryDates": [
                    "2015-04-01"
                ],
                "isAuthorized": true,
                "cardInfo": {
                    "cardNumber": "9824",
                    "type": "visa",
                    "month": "5",
                    "year": "2019",
                    "fullName": "John Smith"
                },
                "complete": "1",
                "productLines": [
                    {
                        "name": "5 Meal Sample Vessel",
                        "id": "2",
                        "description": "One delicious fresh meal in each drawer",
                        "quantity": 1,
                        "price": 27.27
                    }
                ],
                "customerId": "98415",
                "externalId": null,
                "createTime": 1426782925,
                "updateTime": 1426788665,
                "confirmationUri": null,
                "redirectUri": null,
                "authorizationToken": "Gl9CItBJWGFGzI3vR8qhaaYzoWg",
                "authorizeTime": "2015-03-19 16:39:33",
                "transactionTime": "2015-03-19 16:40:20",
                "refunds": [],
                "vessels": null,
                "selectShipping": null,
                "shippingMargin": null,
                "shippingService": null,
                "discount": null,
                "customData": []
            },
        ]
    }

#Group Events

Event API is read only stream of events for all orders. Order status is updated with certain events, but it does not reflect all possible states. The events API should be checked for new events periodically and frequently.  The timestamp returned with each request should always be used with the next request to only retrieve new events.

| Event # | Name | Description | Type |
|-------|--------|-------------|------|
| 1000 | Created |  | Order |
| 1100 | Updated |  | Order |
| 1120 | Item Updated |  | Order |
| 1130 | Delivery address updated | Order will be shipped to new address. | Order |
| 1140 | Delivery date updated | Order delivery date changed. | Order |
| 1200 | Connected to shipment |  | Order |
| 1300 | Connected to purchase order | Order was added to purchase order | Order |
| 1400 | Issue reported | Food shipment or Vessel issue reported by merchant or customer | Order |
| 1500 | Canceled before cut off time | Order was canceled before food was ordered from supplier. | Order |
| 1600 | Canceled after cut off time | Order was canceled after food was ordered from supplier but before the Vessel was shipped. | Order |
| 1620 | Canceled after cut off time by FreshRealm | Order was not supposed to ship - requested by FreshRealm Ops Team merchant will not be charged. | Order |
| 1700 | Canceled after ship | Order was canceled after shipper took the Vessel. Shipper has to be contacted and Vessel will return full. | Order |
| 5000 | Finalized | There are no updates allowed after finalization step. | Order |
| 8000 | Created | Vessel shipment created | Vessel |
| 8010 | Updated | Vessel shipment updated | Vessel |
| 8020 | Canceled | Vessel shipment canceled | Vessel |
| 8040 | Finalized | Vessel shipment finalized | Vessel |
| 8050 | Downloaded | Downloaded by Packer | Vessel |
| 8100 | Released | The Vessel was assembled and packed. | Vessel |
| 8200 | Packed | The Vessel was assembled and packed. | Vessel |
| 8300 | Shipping label printed | Weight was submitted to server and shipping label obtained from shipper. | Vessel |
| 8400 | Reported not shipped | Vessel didn't leave packer facility. | Vessel |
| 10000 | Shipped to zone skip | The Vessel was given to zone skip driver. | Vessel |
| 10100 | Delivered to zone skip | The Vessel was delivered to cold storage. | Vessel |
| 10200 | Delivered to shipper | Shipper obtained the Vessel but system does not have confirmation yet. | Vessel |
| 10300 | Tendered to shipper | Shipper confirmed vessel pickup by sending email or edi message. | Vessel |
| 10400 | Delivery exception | Shipper could not deliver the vessel. | Vessel |
| 10500 | Delivered to customer | Shipper confirmed delivery to customer. | Vessel |
| 10600 | Reprinted return label | Shopper printed custom return shipping label. | Vessel |
| 10700 | Shipped back | Shipper confirmed pickup. | Vessel |
| 10750 | Shipped back using outbound label | Non-peeled outbound label was used for pickup at customer. | Vessel |
| 10770 | Shipped back using outbound label | Non-peeled outbound label was used for pickup at customer. | Vessel |
| 10800 | Returned to packer | Shipper confirmed delivery to packer facility. Lost Vessel fee will not be charged. | Vessel |
| 10900 | Received by packer | Packer confirmed the Vessel delivery. | Vessel |
| 11000 | Reported stolen | Shipper didn't receive the Vessel and customer does not have it either. | Vessel |
| 11100 | Reported lost | Stolen or lost shipping label. | Vessel |
| 11150 | Reported not returned | Vessel was gifted or sold to customer. | Vessel |
| 11200 | Reported issue | Customer or merchant reported order or vessel issue. | Vessel |
| 11300 | Lost Vessel Fee | Lost Vessel fee has been charged. | Vessel |
| 60000 | Created | Pickup request created | Pickup |
| 60100 | Removed | Pickup request removed | Pickup |
| 60200 | Scheduled | Pickup scheduled | Pickup |
| 60300 | Canceled | Pickup canceled | Pickup |
| 60400 | Missed | Pickup missed | Pickup |
| 60500 | Rescheduled | Pickup rescheduled | Pickup |
| 60600 | Picked Up | Picked Up | Pickup |

## List Events [/events?key={token}]
###Get All Events[GET]

+ Parameters
    + token (required, string)
    + limit (optional, integer)
    + timestamp (optional, string)
    
+ Response 200 (application/json)

    {
      "code": 200,
      "timestamp": 1427468187,
      "data": [
        {
          "id": "618eb9fa1b9f094e09ff7ead3681bd52",
          "event": "8200",
          "type": "Vessel",
          "name": "Packed",
          "createTime": "2013-12-18 00:00:00",
          "orderId": "62"
        },
        {
          "id": "9059f337e5c76d906696fcf2434007e4",
          "event": "8300",
          "type": "Vessel",
          "name": "Shipping label printed",
          "createTime": "2013-12-18 00:00:00",
          "orderId": "62"
        },
        {
          "id": "339b6fcce0c8b739278d61bde52936d2",
          "event": "8200",
          "type": "Vessel",
          "name": "Packed",
          "createTime": "2013-12-19 00:00:00",
          "orderId": "63"
        }
      ]
    }


#Group Other API Calls
##Get shipping Days [/shippingdays?key={token}&zipcode={zipcode}]

The number of shipping days to reach the shopper. The limit parameter controls the number of weeks worth of shipping days returned.

###Get all shipping days[GET]

+ Parameters
    + token (required, string)
    + zipcode (required, integer)

+ Response 200 (application/json)

        {
            "code": 200,
            "timestamp": 1404151616,
            "data": [
                {
                    "locationId": "16",
                    "shipDate": "2014-07-03",
                    "deliveryDate": "2014-07-04",
                    "cutOffTime": 1404305100
                },
                {
                    "locationId": "16",
                    "shipDate": "2014-07-07",
                    "deliveryDate": "2014-07-08",
                    "cutOffTime": 1404492300
                },
                {
                    "locationId": "16",
                    "shipDate": "2014-07-10",
                    "deliveryDate": "2014-07-11",
                    "cutOffTime": 1404909900
                },
                {
                    "locationId": "16",
                    "shipDate": "2014-07-14",
                    "deliveryDate": "2014-07-15",
                    "cutOffTime": 1405097100
                },
                {
                    "locationId": "16",
                    "shipDate": "2014-07-17",
                    "deliveryDate": "2014-07-18",
                    "cutOffTime": 1405514700
                },
                {
                    "locationId": "16",
                    "shipDate": "2014-07-21",
                    "deliveryDate": "2014-07-22",
                    "cutOffTime": 1405701900
                },
                {
                    "locationId": "16",
                    "shipDate": "2014-07-24",
                    "deliveryDate": "2014-07-25",
                    "cutOffTime": 1406119500
                },
                {
                    "locationId": "16",
                    "shipDate": "2014-07-28",
                    "deliveryDate": "2014-07-29",
                    "cutOffTime": 1406306700
                },
                {
                    "locationId": "16",
                    "shipDate": "2014-07-31",
                    "deliveryDate": "2014-08-01",
                    "cutOffTime": 1406724300
                },
                {
                    "locationId": "16",
                    "shipDate": "2014-08-04",
                    "deliveryDate": "2014-08-05",
                    "cutOffTime": 1406911500
                }
            ]
        }

##Get Vessel Load [/vesselload?key={token}&skus={skus}]

Get Vessel Load for and packing information for a list of product SKUs passed as a JSON encoded array.

The return data is an array of one or more vessels that would be used to pack the products.  For each vessel the load attribute is a 0-100 value indicating percent of capacity used.  The containersInside and containersFree attributes provide information about how many of each container size are packed in the vessel and how many of each container size would still fit.

###Get Vessel Load [GET]

+ Parameters
    + token (required, string)
    + items (required, array)

+ Response 200 (application/json)

        {
            "code": 200,
            "timestamp": 1404152982,
            "data": [
                {
                    "version": 5,
                    "vesselName": "Medium",
                    "vesselType": "2",
                    "coolantInside": 5,
                    "coolantNeeded": 5,
                    "itemsInside": 3,
                    "flatCoolantInside": 2,
                    "notchesUsed": 3,
                    "drawerCount": 3,
                    "freeDrawers": 2,
                    "load": 10,
                    "totalWeight": 8.125,
                    "emptyWeight": 0,
                    "containersInside": {
                        "0": 1,
                        "1": 2
                    },
                    "containersFree": {
                        "1": 5,
                        "2": 2,
                        "4": 13
                    },
                    "drawers": [
                        {
                            "vesselNotchNumber": 1,
                            "number": 1,
                            "items": [
                                {
                                    "itemId": "1676",
                                    "orderId": null,
                                    "codropLabel": "",
                                    "description": "Roasting Red Potatoes"
                                },
                                {
                                    "itemId": "1676",
                                    "orderId": null,
                                    "codropLabel": "",
                                    "description": "Roasting Red Potatoes"
                                },
                                {
                                    "itemId": "1401",
                                    "orderId": null,
                                    "codropLabel": "",
                                    "description": "Red Apples - Bagged"
                                }
                            ],
                            "coolants": [
                                {
                                    "itemId": "1684"
                                }
                            ]
                        },
                        {
                            "vesselNotchNumber": 2,
                            "number": 2,
                            "items": [],
                            "coolants": [
                                {
                                    "itemId": "1684"
                                },
                                {
                                    "itemId": "1684"
                                },
                                {
                                    "itemId": "1684"
                                },
                                {
                                    "itemId": "1684"
                                }
                            ]
                        },
                        {
                            "vesselNotchNumber": 3,
                            "number": 3,
                            "items": [],
                            "coolants": []
                        }
                    ]
                }
            ]
        }

## Verify Zipcode availability [/zipcodeavailability?key={token}&zipcode={zipcode}]

Checks to verify if service is available in the requested area.

The returned data includes the ship from zipcode for the zipcode being shipped to and available shippingMethods if any.


### Zipcode availability [POST]



+ Parameters
    + token (required, string)
    + zipcode (required, integer)


+ Response 200 (application/json)

        {
            {
                "code": 200,
                "timestamp": 1404146938,
                "data": {
                    "available": 1,
                    "id": "16",
                    "zipcode": "95828",
                    "shppingMethods": [
                        "fedex_ground"
                    ]
                }
            }
        }